{"version":3,"file":"index.esm.js","sources":["../src/Jargon.ts","../src/decorators/alias.ts","../src/decorators/option.ts","../src/decorators/positional.ts","../src/decorators/required.ts"],"sourcesContent":["export default class Jargon {\n  [index: string]: any;\n  options: string[] = [];\n  positionals: string[] = [];\n\n  parse(): void {\n    let raw = process.argv.slice(2);\n\n    let [positionalArgs, optionsArgs] = raw.reduce(\n      (accum: [string[], string[]], val) => {\n        if (/^-/.exec(val)) {\n          accum[1].push(val);\n        } else {\n          accum[0].push(val);\n        }\n        return accum;\n      },\n      [[], []],\n    );\n    this.assertRequired(positionalArgs);\n    this.assignOptions(optionsArgs);\n    this.assignPositionals(positionalArgs, this.positionals);\n    // console.log(optionsArgs, this.options);\n    // console.log(positionalArgs, this.positionals);\n  }\n\n  private assignOptions(optionsArgs: string[]): void {\n    optionsArgs.forEach((option) => {\n      let prop: string;\n      let val;\n      //handle double dash options\n      if (/^--/.exec(option)) {\n        option = option.replace('--', '');\n\n        //boolean option\n        if (!/=/.exec(option)) {\n          prop = option;\n          val = true;\n        } else {\n          [prop, val] = option.split('=');\n        }\n      } else {\n        //single dash argument\n        //doesn't support passing space delimited strings with single dash right now\n        prop = option;\n        val = true;\n      }\n      this[prop] = val;\n    });\n  }\n\n  private assignPositionals(\n    positionalArgs: string[],\n    positionals: string[],\n  ): void {\n    if (!positionals) {\n      return;\n    }\n    console.log(this.positionals);\n    positionalArgs.forEach((arg, index) => {\n      this[positionals[index]] = arg;\n    });\n  }\n\n  private assertRequired(positionalArgs: string[]): void {\n    if (\n      this.requiredArgCount &&\n      this.requiredArgCount > positionalArgs.length\n    ) {\n      throw new Error('missing required parameters');\n    }\n  }\n}\n","import type Jargon from '../Jargon';\n\nexport function alias(\n  ...aliases: string[]\n): (target: Jargon, key: string) => void {\n  return function (target: Jargon, key: string): void {\n    aliases.forEach((alias) => {\n      Object.defineProperty(target, alias, {\n        get() {\n          return this[key];\n        },\n        set(newValue) {\n          this[key] = newValue;\n        },\n      });\n    });\n    target.parse();\n  };\n}\n","import type Jargon from '../Jargon';\n\nexport function option(target: Jargon, key: string): void {\n  target.options = target.options || [];\n  target.options.push(key);\n  target.parse();\n}\n","import type Jargon from '../Jargon';\n\nexport function positional(target: Jargon, key: string): void {\n  target.positionals = target.positionals || [];\n  target.positionals.push(key);\n  target.parse();\n}\n","import type Jargon from '../Jargon';\n\nexport function required(target: Jargon, key: string): void {\n  target.requiredArgCount = target.requiredArgCount || 0;\n  target.requiredArgCount++;\n}\n"],"names":[],"mappings":"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"}