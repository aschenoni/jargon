{"version":3,"file":"index.umd.min.js","sources":["../src/Jargon.ts","../src/decorators/alias.ts","../src/decorators/option.ts","../src/decorators/positional.ts","../src/decorators/required.ts"],"sourcesContent":["export default class Jargon {\n  [index: string]: any;\n  options: string[] = [];\n  positionals: string[] = [];\n\n  parse(): void {\n    let raw = process.argv.slice(2);\n\n    let [positionalArgs, optionsArgs] = raw.reduce(\n      (accum: [string[], string[]], val) => {\n        if (/^-/.exec(val)) {\n          accum[1].push(val);\n        } else {\n          accum[0].push(val);\n        }\n        return accum;\n      },\n      [[], []],\n    );\n    this.assertRequired(positionalArgs);\n    this.assignOptions(optionsArgs);\n    this.assignPositionals(positionalArgs, this.positionals);\n    // console.log(optionsArgs, this.options);\n    // console.log(positionalArgs, this.positionals);\n  }\n\n  private assignOptions(optionsArgs: string[]): void {\n    optionsArgs.forEach((option) => {\n      let prop: string;\n      let val;\n      //handle double dash options\n      if (/^--/.exec(option)) {\n        option = option.replace('--', '');\n\n        //boolean option\n        if (!/=/.exec(option)) {\n          prop = option;\n          val = true;\n        } else {\n          [prop, val] = option.split('=');\n        }\n      } else {\n        //single dash argument\n        //doesn't support passing space delimited strings with single dash right now\n        prop = option;\n        val = true;\n      }\n      this[prop] = val;\n    });\n  }\n\n  private assignPositionals(\n    positionalArgs: string[],\n    positionals: string[],\n  ): void {\n    if (!positionals) {\n      return;\n    }\n    console.log(this.positionals);\n    positionalArgs.forEach((arg, index) => {\n      this[positionals[index]] = arg;\n    });\n  }\n\n  private assertRequired(positionalArgs: string[]): void {\n    if (\n      this.requiredArgCount &&\n      this.requiredArgCount > positionalArgs.length\n    ) {\n      throw new Error('missing required parameters');\n    }\n  }\n}\n","import type Jargon from '../Jargon';\n\nexport function alias(\n  ...aliases: string[]\n): (target: Jargon, key: string) => void {\n  return function (target: Jargon, key: string): void {\n    aliases.forEach((alias) => {\n      Object.defineProperty(target, alias, {\n        get() {\n          return this[key];\n        },\n        set(newValue) {\n          this[key] = newValue;\n        },\n      });\n    });\n    target.parse();\n  };\n}\n","import type Jargon from '../Jargon';\n\nexport function option(target: Jargon, key: string): void {\n  target.options = target.options || [];\n  target.options.push(key);\n  target.parse();\n}\n","import type Jargon from '../Jargon';\n\nexport function positional(target: Jargon, key: string): void {\n  target.positionals = target.positionals || [];\n  target.positionals.push(key);\n  target.parse();\n}\n","import type Jargon from '../Jargon';\n\nexport function required(target: Jargon, key: string): void {\n  target.requiredArgCount = target.requiredArgCount || 0;\n  target.requiredArgCount++;\n}\n"],"names":["this","Jargon","_a","process","argv","slice","reduce","accum","val","exec","push","positionalArgs","optionsArgs","assertRequired","assignOptions","assignPositionals","positionals","forEach","option","prop","replace","split","_this","console","log","arg","index","requiredArgCount","length","Error","_i","aliases","target","key","alias","Object","defineProperty","get","set","newValue","parse","options"],"mappings":";;;;;+PAAA,aAEEA,aAAoB,GACpBA,iBAAwB,GAqE1B,OAnEEC,kBAAA,WACE,IAEIC,EAFMC,QAAQC,KAAKC,MAAM,GAEWC,QACtC,SAACC,EAA6BC,GAM5B,MALI,KAAKC,KAAKD,GACZD,EAAM,GAAGG,KAAKF,GAEdD,EAAM,GAAGG,KAAKF,GAETD,IAET,CAAC,GAAI,KATFI,OAAgBC,OAWrBZ,KAAKa,eAAeF,GACpBX,KAAKc,cAAcF,GACnBZ,KAAKe,kBAAkBJ,EAAgBX,KAAKgB,cAKtCf,0BAAR,SAAsBW,GAAtB,WACEA,EAAYK,SAAQ,SAACC,SACfC,EACAX,EAEA,MAAMC,KAAKS,IACbA,EAASA,EAAOE,QAAQ,KAAM,IAGzB,IAAIX,KAAKS,IAIXC,GAADjB,EAAcgB,EAAOG,MAAM,SAApBb,SAHPW,EAAOD,EACPV,GAAM,KAORW,EAAOD,EACPV,GAAM,GAERc,EAAKH,GAAQX,MAITP,8BAAR,SACEU,EACAK,GAFF,WAIOA,IAGLO,QAAQC,IAAIxB,KAAKgB,aACjBL,EAAeM,SAAQ,SAACQ,EAAKC,GAC3BJ,EAAKN,EAAYU,IAAUD,OAIvBxB,2BAAR,SAAuBU,GACrB,GACEX,KAAK2B,kBACL3B,KAAK2B,iBAAmBhB,EAAeiB,OAEvC,MAAM,IAAIC,MAAM,4DClEpB,aAAAC,mBAAAA,IAAAC,kBAEA,OAAO,SAAUC,EAAgBC,GAC/BF,EAAQd,SAAQ,SAACiB,GACfC,OAAOC,eAAeJ,EAAQE,EAAO,CACnCG,eACE,OAAOrC,KAAKiC,IAEdK,aAAIC,GACFvC,KAAKiC,GAAOM,QAIlBP,EAAOQ,wCCdYR,EAAgBC,GACrCD,EAAOS,QAAUT,EAAOS,SAAW,GACnCT,EAAOS,QAAQ/B,KAAKuB,GACpBD,EAAOQ,+BCHkBR,EAAgBC,GACzCD,EAAOhB,YAAcgB,EAAOhB,aAAe,GAC3CgB,EAAOhB,YAAYN,KAAKuB,GACxBD,EAAOQ,6BCHgBR,EAAgBC,GACvCD,EAAOL,iBAAmBK,EAAOL,kBAAoB,EACrDK,EAAOL"}